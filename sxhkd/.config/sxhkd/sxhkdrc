#
#  █  █▀ █▄▄▄▄ ▄█     ▄   ██    ▄  █ 
#  █▄█   █  ▄▀ ██      █  █ █  █   █ 
#  █▀▄   █▀▀▌  ██ █     █ █▄▄█ ██▀▀█ 
#  █  █  █  █  ▐█  █    █ █  █ █   █ 
#    █     █    ▐   █  █     █    █  
#   ▀     ▀          █▐     █    ▀   
#                    ▐     ▀         
#
# A customized sxhkdrc for the bspwm window manager.
# https://github.com/baskerville/sxhkd
# https://github.com/baskerville/bspwm

# WM INDEPENDENT KEYBINDINGS

# make sxhkd reload its configuration files:
super + Escape
  pkill -USR1 -x sxhkd

# close visible notifications
~Escape
  [[ `dunstctl count displayed` != \"0\" ]] && dunstctl close

super + shift + Escape
  betterlockscreen -l dimblur

# BSPWM HOTKEYS

# quit/restart bspwm
super + shift + {q,r}
  bspc {quit,wm -r}

# close and kill
super + shift + c
  bspc node -c
# -- or --
shift + Escape
  bspc node -c

# alternate between the tiled and monocle layout
super + m
  bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
  bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
  bspc node -s biggest

# Smart resize, will grow or shrink depending on location.
# Will always grow for floating nodes.
super + ctrl + alt + {Left,Down,Up,Right}
  n=10; \
  { d1=left;   d2=right;  dx=-$n; dy=0;   \
  , d1=bottom; d2=top;    dx=0;   dy=$n;  \
  , d1=top;    d2=bottom; dx=0;   dy=-$n; \
  , d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy


# STATE/FLAGS

# set the window state
super + {t,shift + t,s,f}
  bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
  bspc node -g {marked,locked,sticky,private}


# FOCUS/SWAP

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
  bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma}
  bspc node -f @{parent,brother,first}

# focus the next/previous node in the current desktop
super + {_,shift + }n
  bspc node -f {next,prev}.local.leaf

super + brace{left,right}
  bspc node -f {prev,next}.local.leaf

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
  bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
  bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
  bspc wm -h off; \
  bspc node {older,newer} -f; \
  bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
  bspc {desktop -f,node -d} focused:'^{1-9,10}'


# PRESELECT

# preselect the direction
super + ctrl + {h,j,k,l}
  bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
  bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
  bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
  bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# MOVE/RESIZE

# expand a window by moving one of its side outward
ctrl + alt + {h,j,k,l}
  bspc node -z {left -10 0,bottom 0 10,top 0 -10,right 10 0}

# contract a window by moving one of its side inward
ctrl + alt + shift + {h,j,k,l}
  bspc node -z {right -10 0,top 0 10,bottom 0 -10,left 10 0}

# move a floating window
super + {_,shift + }{Left,Down,Up,Right}
  bspc node -v {-10 0,-50 0,0 10,0 50,0 -10,0 -50,10 0, 50 0}

# App launcher
super + space
  rofi -no-config -no-lazy-grab -show drun -modi drun,window,run -theme ~/.config/polybar/blocks/scripts/rofi/launcher.rasi
# rofi -modi run,drun,window -show drun -show-icons -sidebar-mode

# App launcher 2
super + z
  boomer
#rofi -modi drun -show drun

# view active apps
alt + Tab
  rofi -modi window -show window

# Scratchpad
super + u
  scratch.sh

# kill gui
# dangerous but useful
ctrl + alt + Delete
  xkill

# open the next window in a selected area
super + ctrl + f
  bspc rule -a \* -o state=floating rectangle=$(slop -l -c 0.28,0.35,0.83,0.5)

# APPLICATION KEYBINDINGS (Super + Alt + Key)

# open apps using multiple chords
super + alt + o ; {c,m,n,j,l,r,p,x}
  st -e {cmus,neomutt,newsboat,joshuto,lynx,ranger,ncmpcpp-ueberzug,tmux}

# terminal emulator
super  + {_,shift +} Return
  {st, bspc rule -a \* -o state=floating && st}

# launch surf browser
super + alt + b
  firefox

super + alt + d
  dolphin

# launch ncmpcpp
super + alt + m
  bspc rule -a \* -o state=floating && st -f 'Comic Code Ligatures:pixelsize=10' -e ncmpcpp-ueberzug

# launch vscode/code-oss
super + alt + v
  code-oss
super + alt + shift + v
  code2

# launch telegram
super + alt + t
  telegram-desktop
# launch tmux
super + alt + x
  st -e tmux a

# launch qutebrowser
super + alt + q
  qutebrowser

# DE like launch
ctrl + Escape
  st -e bashtop

# Take Screenshot
{_,shift + ,ctrl + ,alt + }Print
  screenshot.sh {screen,window,select,text}

# DE like emoji selector
super + period
  emoji-picker

ctrl + period
  dmenu_emoji


# DMENU SCRIPTS (Alt+Ctrl+Key)

# Launch dmenu using menu key
alt + Menu
  dmenu_run

# run program launcher
alt + ctrl + Return
  dmenu_run
# passmenu
alt + ctrl + c
  exec clipmenu 
# passmenu
alt + ctrl + p
  exec passmenu 

alt + ctrl + x
  xcolor -s clipboard

# edit common config files
#alt + ctrl + e
#   ~/.dmenu/dmenu-edit-configs.sh
# surfraw
#alt + ctrl + s
#   ~/.dmenu/dmenu-surfraw.sh 
# common system montoring programs
#alt + ctrl + m
#   ~/.dmenu/dmenu-sysmon.sh 
# reddio Reddit viewer
#alt + ctrl + r
#  ~/.dmenu/dmenu-reddio.sh 
# stock trading programs
#alt + ctrl + t
#  ~/.dmenu/dmenu-trading.sh 

# Volume/Music/Brigthnes Controls
# XF86... keys

# Music
XF86Audio{Prev,Next,Play,Stop}
  mpc -q {prev,next,toggle,stop}

ctrl + XF86Audio{Prev,Next}
  mpc seek {-,+}00:00:01

# Home
XF86HomePage
  bspc desktop -f focused:^1

# Calculator
XF86Calculator
  rofi -show calc -modi calc -no-show-match -no-sort

# Volume
{_,shift + ,super + }XF86Audio{LowerVolume,RaiseVolume}
  pamixer {-d 5,-d 1,-d 10,-i 5,-i 1,-i 10} && \
  dunstify -a "Volume" "Volume" -h int:value:`pamixer --get-volume` \
  -h string:category:volume -i volume-level-high -r 100
XF86AudioMute
  pamixer -t

# Screen brightness
{_,shift + ,super + }XF86MonBrightness{Down,Up}
  light {-U 1,-U 10,-S 5,-A 1,-A 10,-S 100}

# Power button
# Make sure to change
#   #HandlePowerKey=poweroff
#  to
#   HandlePowerKey=ignore
# in /etc/systemd/logind.conf for this to work
XF86PowerOff
  power.sh
